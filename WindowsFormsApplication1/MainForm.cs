
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Linq;

namespace WindowsFormsApplication1
{
    public partial class MainForm : Form
    {
        public static string xmlFile = @"E:\Aim\Projects\WindowsFormsApplication1\WindowsFormsApplication1\Products.xml";
        public static int currentProductId = 0;
        private System.Windows.Forms.Button btnReadXml;
        private System.Windows.Forms.Button btnWriteXml;
        private System.Windows.Forms.Button btnConfigXml;
        public static string[] data = new string[5];
        public static XDocument xdata;
        public static bool isEdit = false;

        //  private System.ComponentModel.Container components = null; 

        public MainForm()
        {

            InitializeComponent();
            CheckFileAndDisplay();


        }

        public void CheckFileAndDisplay()
        {

            if (!File.Exists(xmlFile))
            {
                // Create an XML file    
                CreateXMLFile();

            }
            else
            {
                Console.WriteLine("File exists.");
                Console.WriteLine("------------- Reading the file.. --------------");

            }

            DisplayData(xmlFile);


        }

        public void CreateXMLFile()
        {
            XmlWriterSettings settings = new XmlWriterSettings();
            settings.Indent = true;
            XmlWriter writer = XmlWriter.Create("Products.xml", settings);
            writer.WriteStartDocument();
            writer.WriteComment("This file is generated by the program.");
            writer.WriteStartElement("Products");
            writer.WriteStartElement("Product");
            writer.WriteAttributeString("id", "01");


            writer.WriteElementString("Name", "Sample Item");
            writer.WriteElementString("Price", "0.00");
            writer.WriteElementString("Description", "This is a Description");

            writer.WriteEndElement();
            writer.WriteEndElement();
            writer.WriteEndDocument();

            writer.Flush();
            writer.Close();
            ReadXMLFile();

        }

        /* TODO: Change this function to read xml doc properly*/
        public void ReadXMLFile()
        {

            // XmlReader reader = XmlReader.Create("Products.xml");
            XmlReader reader = XmlReader.Create(xmlFile);
            while (reader.Read())
            {
                if (reader.NodeType == XmlNodeType.Element
                && reader.Name == "Product")
                {
                    //Console.WriteLine("ID = " + reader.GetAttribute(0));
                    // Console.WriteLine("Name = " + reader.GetAttribute(1));

                    while (reader.NodeType != XmlNodeType.EndElement)
                    {
                        reader.Read();
                        if (reader.Name == "Date")
                        {
                            while (reader.NodeType != XmlNodeType.EndElement)
                            {
                                reader.Read();
                                if (reader.NodeType == XmlNodeType.Text)
                                {
                                    // Console.WriteLine("Date }", Double.Parse(reader.Value));
                                    Console.WriteLine("Date is" + reader.Value);
                                }
                            }

                            reader.Read();

                        } //end if


                    } //end while
                } //end if

            } //end while
        }

        public static void Hello()
        {
            Console.WriteLine("hello");
        }

        public static void DisplayData(String url)
        {

            DataSet dataset = new DataSet();
            dataset.ReadXml(xmlFile);
            dataGridView2.DataSource = dataset.Tables[0];


            var xdoc = XDocument.Load(xmlFile);
            currentProductId = GetCurrentProductId(xdoc);
            // Also Update Total         
            total.Text = CalculateTotal();

            xdata = xdoc;
            // dataGridView2.Columns.GetLastColumn().Visible = false;
            //dataGridView2.Columns[5].Visible = false;

        }


        public static int GetCurrentProductId(XDocument xdoc)
        {
            int productId = 0;
            string index = xdoc.Descendants("Product").Attributes("id").Last().Value;
            productId = Convert.ToInt32(index);
            return productId;
        }


        /*TODO: Refactor code to read from the datagridview instead. DataGridViewRow*/
        public static string CalculateTotal()
        {
            var xdoc = XDocument.Load(xmlFile);
            var prices = (from p in xdoc.Descendants("Product")
                          from price in p.Elements("Price")
                          select price.Value
                   ).ToList();


            double total = 0.0;
            foreach (var p in prices)
            {
                Console.WriteLine("\t" + p);
                total += Convert.ToDouble(p);

            }

            return total.ToString();
        }


        private void btnReadXml_Click(object sender, System.EventArgs e)
        {
            Console.WriteLine("------------------------------------------- Read Button is clicked ----------------------------------------------");


            DisplayData(xmlFile);

        }

        private void AddButton_Click(object sender, EventArgs e)
        {
            isEdit = false;
            EntryForm addForm = new EntryForm();
            addForm.Show();
        }

        private void btnWriteXml_Click(object sender, EventArgs e)
        {

            XDocument doc = XDocument.Load(xmlFile);

            currentProductId++;
            string currentIndex = currentProductId.ToString();

            XElement Product = new XElement("Product", new XAttribute("id", currentIndex),
                new XElement("Date", "French"),
                new XElement("Name", "555-12345678"),
                new XElement("Description", "ASasaS"),
                new XElement("Price", "10.99")
                );
            doc.Root.Add(Product);
            doc.Save(xmlFile);
            DisplayData(xmlFile);
            //ReadXMLFile();

        }


        private void btnConfigXml_Click(object sender, System.EventArgs e)
        {
            string connString = @"server=(local)\SQLEXPRESS;database=MyDatabase;Integrated Security=SSPI";
            SqlConnection conn = new SqlConnection(connString);

            SqlCommand cmd = new SqlCommand();
            cmd.Connection = conn;
            cmd.CommandText = @"select id,lastname from employee for xml auto";

            try
            {
                conn.Open();
                XmlReader xmlrdr = cmd.ExecuteXmlReader();
                DataSet ds = new DataSet();
                ds.ReadXml(xmlrdr, XmlReadMode.InferSchema);
                dataGridView2.DataSource = ds;
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                conn.Close();
            }
        }



        private void dataGridView2_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            isEdit = true;
            for (int i = 0; i < data.Length; i++)
            {

                data[i] = dataGridView2.Rows[e.RowIndex].Cells[i + 1].Value.ToString();
            }

            data[4] = (e.RowIndex + 1).ToString();
            MessageBox.Show(data[0] + data[1] + data[2] + data[3] + data[4]);



            EntryForm addForm = new EntryForm(data);
            addForm.Show();

        }



        private void MainForm_Load(object sender, EventArgs e)
        {
            this.btnReadXml.Hide();
            this.btnWriteXml.Hide();
            this.btnConfigXml.Hide();
            dataGridView2.AllowUserToAddRows = false;

        }
    }
}
